View(teams_ids)
teams_ids[team_code %like% "blazers",current_team_id := "POR"]
teams_ids[team_code %like% "bucks",current_team_id := "MIL"]
teams_ids[team_code %like% "bullets|wizards|capitols",current_team_id := "WAS"]
teams_ids[team_code %like% "bulls",current_team_id := "CHI"]
teams_ids[team_code %like% "cavaliers",current_team_id := "CLE"]
teams_ids[team_code %like% "celtics",current_team_id := "BOS"]
teams_ids[team_code %like% "clippers",current_team_id := "LAC"]
teams_ids[team_code %like% "grizzlies",current_team_id := "MEM"]
teams_ids[team_code %like% "hawks",current_team_id := "ATL"]
teams_ids[team_code %like% "heat",current_team_id := "MIA"]
teams_ids[team_code %like% "hornets",current_team_id := "CHA"]
teams_ids[team_code %like% "jazz",current_team_id := "UTA"]
teams_ids[team_code %like% "kings",current_team_id := "SAC"]
teams_ids[team_code %like% "knicks",current_team_id := "NYK"]
teams_ids[team_code %like% "lakers",current_team_id := "LAL"]
teams_ids[team_code %like% "magic",current_team_id := "ORL"]
teams_ids[team_code %like% "mavericks",current_team_id := "DAL"]
teams_ids[team_code %like% "nets",current_team_id := "BRK"]
teams_ids[team_code %like% "nuggets",current_team_id := "DEN"]
teams_ids[team_code %like% "pacers",current_team_id := "IND"]
teams_ids[team_code %like% "pelicans",current_team_id := "NOP"]
teams_ids[team_code %like% "pistons",current_team_id := "DET"]
teams_ids[team_code %like% "raptors",current_team_id := "TOR"]
teams_ids[team_code %like% "rockets",current_team_id := "HOU"]
teams_ids[team_code %like% "sixers",current_team_id := "PHL"]
teams_ids[team_code %like% "spurs",current_team_id := "SAS"]
teams_ids[team_code %like% "suns",current_team_id := "PHO"]
teams_ids[team_code %like% "timberwolves",current_team_id := "MIN"]
teams_ids[team_code %like% "thunder",current_team_id := "OKC"]
teams_ids[team_code %like% "warriors",current_team_id := "GSW"]
View(teams_ids)
teams_ids %>>% data.frame %>>%
dbWriteTable(conn = con,name = 'nba_team_ids',row.names = F)
all_ids %>>% left_join(teams_ids)
all_ids %>>% left_join(teams_ids) -> ds
View(ds)
ds %>>% data.frame %>>%
dbWriteTable(conn = con, name = 'data_nba_player_ids',row.names = F, overwrite = T)
update.packages()
c("jsonlite","dplyr",'reshape2','pipeR') -> packages
lapply(packages,library, character.only = T)
getNBARookieSophomoreData <- function(season_end = 2015, table_name = "Per Game", player_season = "Rookies", season_type = "Regular Season", scrape_time = F){
"http://stats.nba.com/stats/commonplayerinfo?LeagueID=00&PlayerID=" -> stats_stem
"http://stats.nba.com/media/players/230x185/" -> photo_stem
"http://stats.nba.com/media/img/teams/logos/" -> logo_stem
season_type %>>% (gsub('\\ ','+',.)) -> st
table_name %>>% (gsub('\\ ','',.)) -> tn
substr(season_end,start = 3,4) %>>%
(paste((season_end-1)
%>>% as.character(),.,sep = "-")) -> s
"http://stats.nba.com/stats/leagueleaders?LeagueID=00&PerMode=" -> nba_stem
nba_stem %>>% paste0(tn,"&Scope=",player_season,"&Season=",s,
"&SeasonType=",st,"&StatCategory=PTS") -> nba_json_url
pipeline({
nba_json_url
fromJSON(simplifyDataFrame = T)
}) -> df
df$resultSet$headers %>>% tolower() -> headers
'team_id' -> headers[headers %in% 'team']
df$resultSet$rowSet %>>% data.frame() %>>% tbl_df -> data
headers -> names(data)
apply(data[,!names(data) %in% c('player','team_id')],2,as.numeric) ->
data[,!names(data) %in% c('player','team_id')]
season_end -> data$season_end
table_name -> data$table_name
season_type -> data$season_type
player_season -> data$player_season
stats_stem %>>% paste0(data$player_id) -> data$nba_stats_url
photo_stem %>>% paste0(data$player_id,".png") -> data$nba_player_imageURL
logo_stem %>>% paste0(data$team_id,"_logo.svg") -> data$nba_team_imageURL
nba_json_url -> data$nba_jsonURL
if(scrape_time == T){
Sys.time() -> data$scrape_time
}
data$rank <- NULL
return(data)
}
getNBARookieSophomoreData(2015)
getNBARookieSophomoreData(2015) -> data15
View(data15)
getNBARookieSophomoreData(2015,table_name = 'Totals') -> data15
View(data15)
devtools::install_github("Rdatatable/data.table")
remove.packages("data.table", lib="~/Library/R/3.1/library")
devtools::install_github("Rdatatable/data.table")
devtools::install_github("swirldev/swirl_courses")
update.packages()
getBREFTeamStatTable <- function(season_end = 2015, table_name = 'team', date = T){
c('rvest','dplyr','pipeR','RCurl', 'XML') -> packages
lapply(packages, library, character.only = T)
'http://www.basketball-reference.com/leagues/' -> base
(season_end-1) %>>% paste0("-",season_end) -> season
'NBA' -> league
table_name %>>% tolower -> table_name
'#' %>>% paste0(table_name) -> css_page
table_name %>>% paste('stats', sep = "_") -> table
css_page %>>% paste0(" a") -> css_id
base %>>% paste0(league,'_',season_end,".html") -> url
if(table_name == 'standings'){
pipeline({
url
html
html_table(fill = T)
~t
})
if(season_end >= 1971){
t[2] %>>% data.frame %>>% tbl_df -> df
c('team','wins','losses','win_pct','games_back','pts.g','opp_pts.g','srs') -> names(df)
'Eastern' -> df$conference
t[3] %>>% data.frame() %>>% tbl_df -> df2
c('team','wins','losses','win_pct','games_back','pts.g','opp_pts.g','srs') -> names(df2)
'Western' -> df2$conference
rbind_list(df,df2) -> df
df$team %>>% (grepl('\\*',.)) -> df$playoff_team
df$team %>>% (gsub('\\*','',.)) -> df$team
df$team %>>% (colsplit(.,'\\(',c('team','conference_rank'))) %>>%
(.$conference_rank) -> conference_rank
conference_rank %>>% (gsub('\\)','',.)) %>>% as.numeric -> df$conference_rank
df$team %>>% (colsplit(.,'\\(',c('team','conference_rank'))) %>>%
(.$team)  %>>% Trim -> df$team
} else{
t[2] %>>% data.frame %>>% tbl_df -> df
c('team','wins','losses','win_pct','games_back','pts.g','opp_pts.g','srs') -> names(df)
df$team %>>% (grep('Western Division',.)) %>>% as.numeric -> div
'' -> df$conference
'Eastern' -> df[1:div,'conference']
'Western' -> df[div:nrow(df),'conference']
if(grep('\\(',df$team) %>>% length > 0){
df$team %>>% (colsplit(.,'\\(',c('team','conference_rank'))) %>>%
(.$conference_rank) -> conference_rank
conference_rank %>>% (gsub('\\)','',.)) %>>% as.numeric -> df$conference_rank
df$team %>>% (colsplit(.,'\\(',c('team','conference_rank'))) %>>%
(.$team)  %>>% Trim -> df$team
}
df$team %>>% (grepl('\\*',.)) -> df$playoff_team
df$team %>>% (gsub('\\*','',.)) -> df$team
}
df[df$games_back == 'â€”','games_back'] <- 0
df$games_back %>>% as.numeric -> df$games_back
df %>>%
filter(team == 'Baltimore Bullets'|!is.na(wins)) -> df
df$pts.g - df$opp_pts.g -> df$point_differential
pipeline({
url
html
xpathSApply(path = '//*[(@id = "all_standings")]//a',xmlAttrs)
unlist
~team_url_stems
})
NULL -> names(team_url_stems)
team_url_stems %>>% (gsub('.html|\\/teams|\\/','',.)) %>>%
(gsub(pattern = "[^[:alpha:]]", replacement = "", .)) -> bref_team_id
data.frame(season,table_name = 'standings', bref_team_id, df) -> df
'http://www.basketball-reference.com' %>>% paste0(team_url_stems) -> df$bref_team_season_url
} else{
url %>>% ## get table
html %>>%
html_nodes(css_page) %>>%
html_table(header = F) %>>% data.frame() %>>% tbl_df() -> df
if(df$X.1[1] == 'Rk'){
df %>>%
filter(X.1 == "Rk") %>>% as.character -> names
'Rk' %>>% grep(x = df$X.1) -> row_of_header #find where rank is
(row_of_header + 1) %>>% (df[.:nrow(df),]) -> df #skip that row and go to the end
names %>>% tolower-> names(df)} else{
df %>>%
filter(X.1 == "Rk") %>>% as.character -> names
'Rk' %>>% grep(x = df$X.1) -> row_of_header #find where rank is
(row_of_header + 1) %>>% (df[.:nrow(df),]) -> df #skip that row and go to the end
names %>>% tolower-> names(df)
}
names(df) %>>% (gsub('\\%|/','\\.',.)) -> names(df)
NULL -> df$rk
c('team','arena') -> table_name_character
df[,!(df %>>% names) %in% table_name_character] %>>% apply(2, function(x) gsub('\\,','',x) %>>%
as.numeric(x))  -> df[,!(df %>>% names) %in% table_name_character] #get rid of commas and make numeric
df$team %>>% grepl(pattern = '\\*') -> df$playoff_team
df$team %>>% (gsub('\\*','',.)) -> df$team
df %>>% nrow() -1  -> rows
df[1:rows,] -> df
paste0("//*[(@id = '",table_name,"')]//a") -> xpath
##Grab Team Ids
url %>>% ## get table
html %>>%
xpathSApply(xpath,xmlAttrs) %>>%
unlist %>>% as.character -> stems
stems %>>% (gsub('\\/|.html|teams','',.)) %>>%
(gsub(season_end,'',.)) -> bref_team_id
data.frame(season,table_name = table, bref_team_id, df) -> df
'http://www.basketball-reference.com' %>>% paste0(stems) -> df$bref_team_season_url
}
if(date == T){
Sys.time() -> df$scrape_time
}
return(df)
}
library("dplyr", lib.loc="~/Library/R/3.1/library")
library("pipeR", lib.loc="~/Library/R/3.1/library")
library("reshape2", lib.loc="~/Library/R/3.1/library")
1951:2015 -> years
data.frame() %>>% tbl_df -> all_misc
data.frame() %>>% tbl_df -> all_team
data.frame() %>>% tbl_df -> all_misc
for(year in years){
getBREFTeamStatTable(season_end = year,table_name = 'team',date = F) -> team
rbind_list(all_team,team) -> all_team
getBREFTeamStatTable(season_end = year,table_name = 'misc',date = F) -> misc
rbind_list(all_misc,misc) -> all_misc
getBREFTeamStatTable(season_end = year,table_name = 'Standings',date = F) -> standings
rbind_list(all_standings,standings) -> all_standings
}
mtcars %>>% rbind_list(mtcars)
df_scale[,c("arena","season_id","team","bref_team_season_url","bref_team_id_current","Conference","nba_team_imageURL","color","bref_team_id","points","current_team","bref_id")
df_scale[,c("arena","season_id","team","bref_team_season_url","bref_team_id_current","Conference","nba_team_imageURL","color","bref_team_id","points","current_team","bref_id")]
'all_data.csv' %>>% read.csv() %>>% tbl_df -> df
df[,sort(df %>>% names)] -> df
'teams_logos_colors.csv' %>>% read.csv %>>% tbl_df -> teams_logos_colors
'column_names.csv' %>>% read.csv() %>>% tbl_df -> col_names
detail <-
sprintf("<table><tbody><tr><td><span style='font-size:10px;'><span style='font-family:lucida sans unicode,lucida grande,sans-serif;'><img src='%1$s' height= '100px', width = '100px'></span></span></td><td style='text-align: center;'><span style='font-size:12px;'><span style='font-family:lucida sans unicode,lucida grande,sans-serif;'><strong>Season:</strong> %4$s<br><strong>Team:</strong> %2$s<br><strong>Current Team:</strong> %7$s<br><strong>Playoff Team:</strong> %8$s<br><strong>NBA Champion:</strong> %9$s<br><strong>Conference:</strong> %3$s<br><strong>Win Percentage:</strong> %5$s<br><strong>Wins:</strong> %6$s<br><strong>Losses:</strong> %10$s</span></td></tr></tbody></table>",
df$nba_team_imageURL,
df$team,
df$conference,
paste0(
as.numeric(df$season_end)-1,"-",as.numeric(df$season_end)
),
df$win_pct,
df$wins,
df$current_team,
df$playoff_team,
df$league_champion,
df$losses
)
df$conference %>>%
factor(levels = c('Western','Eastern'), labels = c(0,1)) -> df$eastern
'Eastern Conference' -> names(df)[67]
df$`Eastern Conference` %>>% as.numeric %>>% (.-1) -> df$`Eastern Conference`
df -> df_scale
col_names$column_name -> names(df_scale)[1:66]
T -> use_scale
library(qtlcharts)
setwd("/Users/alexbresler/Desktop/Github/blog_code/nba/posts/team_qtl")
'all_data.csv' %>>% read.csv() %>>% tbl_df -> df
df[,sort(df %>>% names)] -> df
'teams_logos_colors.csv' %>>% read.csv %>>% tbl_df -> teams_logos_colors
'column_names.csv' %>>% read.csv() %>>% tbl_df -> col_names
detail <-
sprintf("<table><tbody><tr><td><span style='font-size:10px;'><span style='font-family:lucida sans unicode,lucida grande,sans-serif;'><img src='%1$s' height= '100px', width = '100px'></span></span></td><td style='text-align: center;'><span style='font-size:12px;'><span style='font-family:lucida sans unicode,lucida grande,sans-serif;'><strong>Season:</strong> %4$s<br><strong>Team:</strong> %2$s<br><strong>Current Team:</strong> %7$s<br><strong>Playoff Team:</strong> %8$s<br><strong>NBA Champion:</strong> %9$s<br><strong>Conference:</strong> %3$s<br><strong>Win Percentage:</strong> %5$s<br><strong>Wins:</strong> %6$s<br><strong>Losses:</strong> %10$s</span></td></tr></tbody></table>",
df$nba_team_imageURL,
df$team,
df$conference,
paste0(
as.numeric(df$season_end)-1,"-",as.numeric(df$season_end)
),
df$win_pct,
df$wins,
df$current_team,
df$playoff_team,
df$league_champion,
df$losses
)
df$conference %>>%
factor(levels = c('Western','Eastern'), labels = c(0,1)) -> df$eastern
'Eastern Conference' -> names(df)[67]
df$`Eastern Conference` %>>% as.numeric %>>% (.-1) -> df$`Eastern Conference`
df -> df_scale
col_names$column_name -> names(df_scale)[1:66]
T -> use_scale
df_scale[,c("arena","season_id","team","bref_team_season_url","bref_team_id_current","Conference","nba_team_imageURL","color","bref_team_id","points","current_team","bref_id")]
df_scale[,!c("arena","season_id","team","bref_team_season_url","bref_team_id_current","Conference","nba_team_imageURL","color","bref_team_id","points","current_team","bref_id")]
df_scale[,!names(df_scale) %in% c("arena","season_id","team","bref_team_season_url","bref_team_id_current","Conference","nba_team_imageURL","color","bref_team_id","points","current_team","bref_id")]
df_scale[,!names(df_scale) %in% c("arena","season_id","team","bref_team_season_url","bref_team_id_current","Conference","nba_team_imageURL","color","bref_team_id","points","current_team","bref_id","Season")]
pipeline({
df_scale[,!names(df_scale) %in% c("arena","season_id","team","bref_team_season_url","bref_team_id_current","Conference","nba_team_imageURL","color","bref_team_id","points","current_team","bref_id","Season")]
scale()
~plot_ds
})
T -> use_scale
if(use_scale == T){
pipeline({
df_scale[,!names(df_scale) %in% c("arena","season_id","team","bref_team_season_url","bref_team_id_current","Conference","nba_team_imageURL","color","bref_team_id","points","current_team","bref_id","Season")]
scale()
~plot_ds
})
} else{
pipeline({
df_scale[,!names(df_scale) %in% c("arena","season_id","team","bref_team_season_url","bref_team_id_current","Conference","nba_team_imageURL","color","bref_team_id","points","current_team","bref_id")]
~plot_ds
})
}
detail -> rownames(plot_ds)
df$bref_id %>>% factor -> ids
plot_ds %>>% (iplotCorr(mat = .,ids, digits = 4,onefile = T,
reorder = T,title="NBA Team Performance Correlation-Scatter Matrix<br>Data Scaled Mean to 0 and Standard Deviation 1<br>Colored by Current Franchise<br>1951-2015 [2015 Data Through 12/03/14]<br><a href = 'http://basketball-reference.com' target ='_blank'>Data Source</a><br><a href = 'http://asbcllc.com/blog/2014/december/nba_team_corr_matrix/unscaled' target ='_blank'>Unscaled Version Here</a>",
caption = "The left panel is an interactive correlation matrix, where blue indicates <strong>negative</strong> correation and red indicates <strong>positive</strong> correlation.  The stronger the color, the higher the correlation<br><br>Hover over pixels in the correlation matrix on the left to see the correlation.
Click the selected box activate scatter plot on the right.<br><br><strong>Example:</strong> Historically Free Throws Made Per Game are 97% positively correlated to Free Throw Attempts Per Game.",
chartOpts=list(scatcolors=teams_logos_colors$color,
rectcolor = "#ffffff",
cortitle="Correlation Matrix",
scattitle="Scatterplot of Selected Variables"
))
)
F-> use_scale
if(use_scale == T){
pipeline({
df[,!names(df) %in% c("arena","season_id","team","bref_team_season_url","bref_team_id_current","Conference","nba_team_imageURL","color","bref_team_id","points","current_team","bref_id","Season")]
scale()
~plot_ds
})
} else{
pipeline({
df[,!names(df) %in% c("arena","season_id","team","bref_team_season_url","bref_team_id_current","Conference","nba_team_imageURL","color","bref_team_id","points","current_team","bref_id")]
~plot_ds
})
}
detail -> rownames(plot_ds)
df$bref_id %>>% factor -> ids
plot_ds %>>% (iplotCorr(mat = .,ids, digits = 4,onefile = T,
reorder = T,title="NBA Team Performance Correlation-Scatter Matrix<br>Colored by Current Franchise<br>1951-2015 [2015 Data Through 12/03/14]<br><a href = 'http://basketball-reference.com' target ='_blank'>Data Source</a><br><a href = 'http://asbcllc.com/blog/2014/december/nba_team_corr_matrix/scaled' target ='_blank'>Scaled Version Here</a>",
caption = "The left panel is an interactive correlation matrix, where blue indicates <strong>negative</strong> correation and red indicates <strong>positive</strong> correlation.  The stronger the color, the higher the correlation<br><br>Hover over pixels in the correlation matrix on the left to see the correlation.
Click the selected box activate scatter plot on the right.<br><br><strong>Example:</strong> Historically Free Throws Made Per Game are 97% positively correlated to Free Throw Attempts Per Game.",
chartOpts=list(scatcolors=teams_logos_colors$color,
rectcolor = "#ffffff",
cortitle="Correlation Matrix",
scattitle="Scatterplot of Selected Variables"
))
)
View(df)
col_names$column_name -> names(df)
setwd("/Users/alexbresler/Desktop/Github/blog_code/nba/posts/team_qtl")
'all_data.csv' %>>% read.csv() %>>% tbl_df -> df
df[,sort(df %>>% names)] -> df
'teams_logos_colors.csv' %>>% read.csv %>>% tbl_df -> teams_logos_colors
'column_names.csv' %>>% read.csv() %>>% tbl_df -> col_names
detail <-
sprintf("<table><tbody><tr><td><span style='font-size:10px;'><span style='font-family:lucida sans unicode,lucida grande,sans-serif;'><img src='%1$s' height= '100px', width = '100px'></span></span></td><td style='text-align: center;'><span style='font-size:12px;'><span style='font-family:lucida sans unicode,lucida grande,sans-serif;'><strong>Season:</strong> %4$s<br><strong>Team:</strong> %2$s<br><strong>Current Team:</strong> %7$s<br><strong>Playoff Team:</strong> %8$s<br><strong>NBA Champion:</strong> %9$s<br><strong>Conference:</strong> %3$s<br><strong>Win Percentage:</strong> %5$s<br><strong>Wins:</strong> %6$s<br><strong>Losses:</strong> %10$s</span></td></tr></tbody></table>",
df$nba_team_imageURL,
df$team,
df$conference,
paste0(
as.numeric(df$season_end)-1,"-",as.numeric(df$season_end)
),
df$win_pct,
df$wins,
df$current_team,
df$playoff_team,
df$league_champion,
df$losses
)
df$conference %>>%
factor(levels = c('Western','Eastern'), labels = c(0,1)) -> df$eastern
'Eastern Conference' -> names(df)[67]
df$`Eastern Conference` %>>% as.numeric %>>% (.-1) -> df$`Eastern Conference`
df -> df_scale
col_names$column_name -> names(df)[1:66]
View(df)
F-> use_scale
if(use_scale == T){
pipeline({
df[,!names(df) %in% c("arena","season_id","team","bref_team_season_url","bref_team_id_current","Conference","nba_team_imageURL","color","bref_team_id","points","current_team","bref_id","Season")]
scale()
~plot_ds
})
} else{
pipeline({
df[,!names(df) %in% c("arena","season_id","team","bref_team_season_url","bref_team_id_current","Conference","nba_team_imageURL","color","bref_team_id","points","current_team","bref_id")]
~plot_ds
})
}
detail -> rownames(plot_ds)
df$bref_id %>>% factor -> ids
plot_ds %>>% (iplotCorr(mat = .,ids, digits = 4,onefile = T,
reorder = T,title="NBA Team Performance Correlation-Scatter Matrix<br>Colored by Current Franchise<br>1951-2015 [2015 Data Through 12/03/14]<br><a href = 'http://basketball-reference.com' target ='_blank'>Data Source</a><br><a href = 'http://asbcllc.com/blog/2014/december/nba_team_corr_matrix/scaled' target ='_blank'>Scaled Version Here</a>",
caption = "The left panel is an interactive correlation matrix, where blue indicates <strong>negative</strong> correation and red indicates <strong>positive</strong> correlation.  The stronger the color, the higher the correlation<br><br>Hover over pixels in the correlation matrix on the left to see the correlation.
Click the selected box activate scatter plot on the right.<br><br><strong>Example:</strong> Historically Free Throws Made Per Game are 97% positively correlated to Free Throw Attempts Per Game.",
chartOpts=list(scatcolors=teams_logos_colors$color,
rectcolor = "#ffffff",
cortitle="Correlation Matrix",
scattitle="Scatterplot of Selected Variables"
))
)
plot_ds %>>% (iplotCorr(mat = .,ids, digits = 4,onefile = T,
reorder = T,title="NBA Team Performance Correlation-Scatter Matrix<br>Colored by Current Franchise<br>1951-2015 [2015 Data Through 12/03/14]<br><a href = 'http://basketball-reference.com' target ='_blank'>Data Source</a><br><a href = 'http://asbcllc.com/blog/2014/december/nba_team_corr_matrix/scaled' target ='_blank'>Scaled Version Here</a>",
caption = "The left panel is an interactive correlation matrix, where blue indicates <strong>negative</strong> correation and red indicates <strong>positive</strong> correlation.  The stronger the color, the higher the correlation<br><br>Hover over pixels in the correlation matrix on the left to see the correlation.
Click the selected box activate scatter plot on the right.<br><br><strong>Example:</strong> Historically Free Throws Made Per Game are 97% positively correlated to Free Throw Attempts Per Game.",
chartOpts=list(scatcolors=teams_logos_colors$color,
rectcolor = "#ffffff",
cortitle="Correlation Matrix",
scattitle="Scatterplot of Selected Variables"
))
)
setwd("/Users/alexbresler/Desktop/Github/blog_code/nba/posts/team_qtl")
'all_data.csv' %>>% read.csv() %>>% tbl_df -> df
df[,sort(df %>>% names)] -> df
'teams_logos_colors.csv' %>>% read.csv %>>% tbl_df -> teams_logos_colors
'column_names.csv' %>>% read.csv() %>>% tbl_df -> col_names
detail <-
sprintf("<table><tbody><tr><td><span style='font-size:10px;'><span style='font-family:lucida sans unicode,lucida grande,sans-serif;'><img src='%1$s' height= '100px', width = '100px'></span></span></td><td style='text-align: center;'><span style='font-size:12px;'><span style='font-family:lucida sans unicode,lucida grande,sans-serif;'><strong>Season:</strong> %4$s<br><strong>Team:</strong> %2$s<br><strong>Current Team:</strong> %7$s<br><strong>Playoff Team:</strong> %8$s<br><strong>NBA Champion:</strong> %9$s<br><strong>Conference:</strong> %3$s<br><strong>Win Percentage:</strong> %5$s<br><strong>Wins:</strong> %6$s<br><strong>Losses:</strong> %10$s</span></td></tr></tbody></table>",
df$nba_team_imageURL,
df$team,
df$conference,
paste0(
as.numeric(df$season_end)-1,"-",as.numeric(df$season_end)
),
df$win_pct,
df$wins,
df$current_team,
df$playoff_team,
df$league_champion,
df$losses
)
df$conference %>>%
factor(levels = c('Western','Eastern'), labels = c(0,1)) -> df$eastern
'Eastern Conference' -> names(df)[67]
df$`Eastern Conference` %>>% as.numeric %>>% (.-1) -> df$`Eastern Conference`
df -> df_scale
col_names$column_name -> names(df_scale)[1:66]
T -> use_scale
if(use_scale == T){
pipeline({
df_scale[,!names(df_scale) %in% c("arena","season_id","team","bref_team_season_url","bref_team_id_current","Conference","nba_team_imageURL","color","bref_team_id","points","current_team","bref_id","Season")]
scale()
~plot_ds
})
} else{
pipeline({
df_scale[,!names(df_scale) %in% c("arena","season_id","team","bref_team_season_url","bref_team_id_current","Conference","nba_team_imageURL","color","bref_team_id","points","current_team","bref_id")]
~plot_ds
})
}
detail -> rownames(plot_ds)
df$bref_id %>>% factor -> ids
plot_ds %>>% (iplotCorr(mat = .,ids, digits = 4,onefile = T,
reorder = T,title="NBA Team Performance Correlation-Scatter Matrix<br>Data Scaled Mean to 0 and Standard Deviation 1<br>Colored by Current Franchise<br>1951-2015 [2015 Data Through 12/03/14]<br><a href = 'http://basketball-reference.com' target ='_blank'>Data Source</a><br><a href = 'http://asbcllc.com/blog/2014/december/nba_team_corr_matrix/unscaled' target ='_blank'>Unscaled Version Here</a>",
caption = "The left panel is an interactive correlation matrix, where blue indicates <strong>negative</strong> correation and red indicates <strong>positive</strong> correlation.  The stronger the color, the higher the correlation<br><br>Hover over pixels in the correlation matrix on the left to see the correlation.
Click the selected box activate scatter plot on the right.<br><br><strong>Example:</strong> Historically Free Throws Made Per Game are 97% positively correlated to Free Throw Attempts Per Game.",
chartOpts=list(scatcolors=teams_logos_colors$color,
rectcolor = "#ffffff",
cortitle="Correlation Matrix",
scattitle="Scatterplot of Selected Variables"
))
)
col_names$column_name -> names(df)[1:66]
F-> use_scale
if(use_scale == T){
pipeline({
df[,!names(df) %in% c("arena","season_id","team","bref_team_season_url","bref_team_id_current","Conference","nba_team_imageURL","color","bref_team_id","points","current_team","bref_id","Season")]
scale()
~plot_ds
})
} else{
pipeline({
df[,!names(df) %in% c("arena","season_id","team","bref_team_season_url","bref_team_id_current","Conference","nba_team_imageURL","color","bref_team_id","points","current_team","bref_id")]
~plot_ds
})
}
detail -> rownames(plot_ds)
df$bref_id %>>% factor -> ids
plot_ds %>>% (iplotCorr(mat = .,ids, digits = 4,onefile = T,
reorder = T,title="NBA Team Performance Correlation-Scatter Matrix<br>Colored by Current Franchise<br>1951-2015 [2015 Data Through 12/03/14]<br><a href = 'http://basketball-reference.com' target ='_blank'>Data Source</a><br><a href = 'http://asbcllc.com/blog/2014/december/nba_team_corr_matrix/scaled' target ='_blank'>Scaled Version Here</a>",
caption = "The left panel is an interactive correlation matrix, where blue indicates <strong>negative</strong> correation and red indicates <strong>positive</strong> correlation.  The stronger the color, the higher the correlation<br><br>Hover over pixels in the correlation matrix on the left to see the correlation.
Click the selected box activate scatter plot on the right.<br><br><strong>Example:</strong> Historically Free Throws Made Per Game are 97% positively correlated to Free Throw Attempts Per Game.",
chartOpts=list(scatcolors=teams_logos_colors$color,
rectcolor = "#ffffff",
cortitle="Correlation Matrix",
scattitle="Scatterplot of Selected Variables"
))
)
devtools::install_github("kbroman/qtlcharts")
library("qtl", lib.loc="~/Library/R/3.1/library")
n.ind <- 500
n.gene <- 10000
expr <- matrix(rnorm(n.ind * n.gene, (1:n.ind)/n.ind*3), ncol=n.gene)
dimnames(expr) <- list(paste0("ind", 1:n.ind),
paste0("gene", 1:n.gene))
# open iboxplot in web browser
iboxplot(expr, title="iboxplot example",
chartOpts=list(xlab="Mice", ylab="Gene expression"))
)
library(qtl)
data(hyper)
map <- pull.map(hyper)
# open iplotMap in web browser
iplotMap(map, shift=TRUE, title="iplotMap example")
iplotMap(onefile = T,map, shift=TRUE, title="iplotMap example")
T -> use_scale
if(use_scale == T){
pipeline({
df_scale[,!names(df_scale) %in% c("arena","season_id","team","bref_team_season_url","bref_team_id_current","Conference","nba_team_imageURL","color","bref_team_id","points","current_team","bref_id","Season")]
scale()
~plot_ds
})
} else{
pipeline({
df_scale[,!names(df_scale) %in% c("arena","season_id","team","bref_team_season_url","bref_team_id_current","Conference","nba_team_imageURL","color","bref_team_id","points","current_team","bref_id")]
~plot_ds
})
}
detail -> rownames(plot_ds)
df$bref_id %>>% factor -> ids
plot_ds %>>% (iplotCorr(mat = .,ids, digits = 4,onefile = T,
reorder = T,title="NBA Team Performance Correlation-Scatter Matrix<br>Data Scaled Mean to 0 and Standard Deviation 1<br>Colored by Current Franchise<br>1951-2015 [2015 Data Through 12/03/14]<br><a href = 'http://basketball-reference.com' target ='_blank'>Data Source</a><br><a href = 'http://asbcllc.com/blog/2014/december/nba_team_corr_matrix/unscaled' target ='_blank'>Unscaled Version Here</a>",
caption = "The left panel is an interactive correlation matrix, where blue indicates <strong>negative</strong> correation and red indicates <strong>positive</strong> correlation.  The stronger the color, the higher the correlation<br><br>Hover over pixels in the correlation matrix on the left to see the correlation.
Click the selected box activate scatter plot on the right.<br><br><strong>Example:</strong> Historically Free Throws Made Per Game are 97% positively correlated to Free Throw Attempts Per Game.",
chartOpts=list(scatcolors=teams_logos_colors$color,
rectcolor = "#ffffff",
cortitle="Correlation Matrix",
scattitle="Scatterplot of Selected Variables"
))
)
plot_ds
